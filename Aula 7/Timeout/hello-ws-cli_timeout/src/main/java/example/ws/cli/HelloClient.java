package example.ws.cli;

import java.net.SocketTimeoutException;
import java.util.*;
import javax.xml.ws.*;
import static javax.xml.ws.BindingProvider.ENDPOINT_ADDRESS_PROPERTY;

// classes generated by wsimport from WSDL
import example.ws.Hello;
import example.ws.HelloImplService;

public class HelloClient {

    public static void main(String[] args) {
        HelloImplService service = new HelloImplService();
        Hello port = service.getHelloImplPort();

        BindingProvider bindingProvider = (BindingProvider) port;
        Map<String, Object> requestContext = bindingProvider.getRequestContext();

        if (args.length < 1) {
            // get endpoint address
            Object url = requestContext.get(ENDPOINT_ADDRESS_PROPERTY);
            System.out.printf("Remote call to %s ...%n", url);

            // call using default endpoint address
        } else {
            // set endpoint address
            String url = args[0];
            requestContext.put(ENDPOINT_ADDRESS_PROPERTY, url);
            System.out.printf("Remote call to %s ...%n", url);

            int connectionTimeout = 1000;
            // The connection timeout property has different names in different versions of JAX-WS
            // Set them all to avoid compatibility issues
            final List<String> CONN_TIME_PROPS = new ArrayList<String>();
            CONN_TIME_PROPS.add("com.sun.xml.ws.connect.timeout");
            CONN_TIME_PROPS.add("com.sun.xml.internal.ws.connect.timeout");
            CONN_TIME_PROPS.add("javax.xml.ws.client.connectionTimeout");
            // Set timeout until a connection is established (unit is milliseconds; 0 means infinite)
            for (String propName : CONN_TIME_PROPS)
                requestContext.put(propName, connectionTimeout);
            System.out.printf("Set connection timeout to %d milliseconds%n", connectionTimeout);

            int receiveTimeout = 2000;
            // The receive timeout property has alternative names
            // Again, set them all to avoid compability issues
            final List<String> RECV_TIME_PROPS = new ArrayList<String>();
            RECV_TIME_PROPS.add("com.sun.xml.ws.request.timeout");
            RECV_TIME_PROPS.add("com.sun.xml.internal.ws.request.timeout");
            RECV_TIME_PROPS.add("javax.xml.ws.client.receiveTimeout");
            // Set timeout until the response is received (unit is milliseconds; 0 means infinite)
            for (String propName : RECV_TIME_PROPS)
                requestContext.put(propName, 1000);
            System.out.printf("Set receive timeout to %d milliseconds%n", receiveTimeout);

            // call using set endpoint address
            try {
                String result = port.sayHello("friend");
                System.out.println(result);

            } catch(WebServiceException wse) {
                System.out.println("Caught: " + wse);
                Throwable cause = wse.getCause();
                if (cause != null && cause instanceof SocketTimeoutException) {
                    System.out.println("The cause was a timeout exception: " + cause);
                }
            }
        }

    }

}
