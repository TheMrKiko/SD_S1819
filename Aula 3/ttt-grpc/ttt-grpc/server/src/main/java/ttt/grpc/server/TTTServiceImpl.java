package ttt.grpc.server;

/* these are generated by the TTT-server contract */
import ttt.grpc.TTT.*;
import ttt.grpc.TTTServiceGrpc;
import ttt.grpc.TTTObj;
import io.grpc.stub.StreamObserver;

public class TTTServiceImpl extends TTTServiceGrpc.TTTServiceImplBase {
  private TTTObj ttt = new TTTObj();

  @Override
  public void currentBoard(CurrentBoardRequest request, StreamObserver<CurrentBoardResponse> responseObserver) {
    CurrentBoardResponse response = CurrentBoardResponse.newBuilder().setBoard(ttt.currentBoard()).build();
    responseObserver.onNext(response);
    responseObserver.onCompleted();
  }

  @Override
  public void play(PlayRequest request, StreamObserver<PlayResponse> responseObserver) {
    PlayResponse response = PlayResponse.newBuilder()
        .setBo(ttt.play(request.getLinha(), request.getColuna(), request.getJogador())).build();
    responseObserver.onNext(response);
    responseObserver.onCompleted();
  }

  @Override
  public void checkWinner(CheckWinnerRequest request, StreamObserver<CheckWinnerResponse> responseObserver) {
    CheckWinnerResponse response = CheckWinnerResponse.newBuilder().setIntei(ttt.checkWinner()).build();
    responseObserver.onNext(response);
    responseObserver.onCompleted();
  }

  public void info(InfoRequest request, StreamObserver<InfoResponse> responseObserver) {
    InfoResponse response = InfoResponse.newBuilder().setNjogs(ttt.info(request.getJogador())).build();
    responseObserver.onNext(response);
    responseObserver.onCompleted();
  }

}
